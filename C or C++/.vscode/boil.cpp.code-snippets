{
	// Place your C or C++ workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Boiler Plate": {
		"prefix": "boilcpp",
		"body": [
		  "#include <bits/stdc++.h>",
		  "#define ll long long int",
		  "#define max(a, b) (a > b ? a : b)",
		  "#define min(a, b) (a > b ? b : a)",
		  "#define mod 1000000007",
		  "//const int N = ;",
		  "",
		  "using namespace std;",
		  "",
		  "void solve()",
		  "{",
		  "    ",
		  "}",
		  "",
		  "int main()",
		  "{",
		  "    ios_base::sync_with_stdio(false);",
		  "    cin.tie(NULL);",
		  "    cout.tie(NULL);",
		  "    int T;",
		  "    cin>>T;",
		  "    while(T--)",
		  "        solve();",
		  "    return 0;",
		  "}"
		],
		"description": "Boiler Plate"
	  }

}